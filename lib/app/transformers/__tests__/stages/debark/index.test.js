"use strict";require("core-js/modules/es.symbol");require("core-js/modules/es.array.filter");require("core-js/modules/es.object.get-own-property-descriptor");require("core-js/modules/es.object.get-own-property-descriptors");require("core-js/modules/es.object.keys");require("core-js/modules/web.dom-collections.for-each");var _debark=require("../../../stages/debark");var _=require("../../..");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}jest.mock('shinkansen-signals',function(){return{Signals:{FAILURE:'MOCK FAILURE'}};});jest.mock("../../..",function(){return{transformFailure:jest.fn()};});var DEFAULT={status:'MOCK STATUS',definition:{}};describe('@modernpoacher/zashiki-react-redux/app/transformers/stages/debark',function(){describe('`transform`',function(){it('is defined',function(){expect(_debark.transform).toBeDefined();});});describe('`transform()`',function(){describe('With parameters',function(){afterEach(function(){jest.clearAllMocks();});describe('`status` is `Signals.FAILURE`',function(){it('invokes `transformFailure`',function(){(0,_debark.transform)({status:'MOCK FAILURE'});expect(_.transformFailure).toBeCalledWith('MOCK FAILURE',{});});});describe('`status` is not `Signals.FAILURE`',function(){it('does not invoke `transformFailure`',function(){(0,_debark.transform)({status:'MOCK STATUS'});expect(_.transformFailure).not.toBeCalled();});it('returns an object with default values',function(){expect((0,_debark.transform)({status:'MOCK STATUS'})).toEqual(DEFAULT);});});describe('`definition` is an object',function(){describe('`response` is an object',function(){it('returns an object with `definition` and default values',function(){expect((0,_debark.transform)({status:'MOCK STATUS',definition:'MOCK DEFINITION',response:'MOCK RESPONSE'})).toEqual(_objectSpread({},DEFAULT,{definition:{schema:'MOCK DEFINITION',formData:'MOCK RESPONSE'}}));});});describe('`response` is not an object',function(){it('returns an object with `definition` and default values',function(){expect((0,_debark.transform)({status:'MOCK STATUS',definition:'MOCK DEFINITION'})).toEqual(_objectSpread({},DEFAULT,{definition:{schema:'MOCK DEFINITION',formData:{}}}));});});});});describe('Without parameters',function(){it('invokes `transformFailure`',function(){(0,_debark.transform)({status:'MOCK FAILURE'});expect(_.transformFailure).toBeCalledWith('MOCK FAILURE',{});});});});});