"use strict";var _debark=require("../../../stages/debark");jest.mock('shinkansen-pantograph',function(){return{Pantograph:{DEBARK:{ROUTE:'MOCK ROUTE',CHANGE:'MOCK CHANGE',SUBMIT:'MOCK SUBMIT',FETCH:'MOCK FETCH',STORE:'MOCK STORE',QUERY:'MOCK QUERY'}}};});describe('@modernpoacher/zashiki-react-redux/app/actions/stages/debark',function(){var MOCK_REDIRECT={};var MOCK_ROUTE={};var MOCK_HISTORY={};var MOCK_RESPONSE={statement:'MOCK STATEMENT'};var MOCK_ERROR={};describe('`ROUTE`',function(){it('is defined',function(){expect(_debark.ROUTE).toBe('MOCK ROUTE');});});describe('`SUBMIT`',function(){it('is defined',function(){expect(_debark.SUBMIT).toBe('MOCK SUBMIT');});});describe('`FETCH`',function(){it('is defined',function(){expect(_debark.FETCH).toBe('MOCK FETCH');});});describe('`STORE`',function(){it('is defined',function(){expect(_debark.STORE).toBe('MOCK STORE');});});describe('`SUBMIT_FULFILLED`',function(){it('is defined',function(){expect(_debark.SUBMIT_FULFILLED).toBe('MOCK SUBMIT_FULFILLED');});});describe('`FETCH_FULFILLED`',function(){it('is defined',function(){expect(_debark.FETCH_FULFILLED).toBe('MOCK FETCH_FULFILLED');});});describe('`STORE_FULFILLED`',function(){it('is defined',function(){expect(_debark.STORE_FULFILLED).toBe('MOCK STORE_FULFILLED');});});describe('`SUBMIT_REJECTED`',function(){it('is defined',function(){expect(_debark.SUBMIT_REJECTED).toBe('MOCK SUBMIT_REJECTED');});});describe('`FETCH_REJECTED`',function(){it('is defined',function(){expect(_debark.FETCH_REJECTED).toBe('MOCK FETCH_REJECTED');});});describe('`STORE_REJECTED`',function(){it('is defined',function(){expect(_debark.STORE_REJECTED).toBe('MOCK STORE_REJECTED');});});describe('`debarkRoute`',function(){it('is defined',function(){expect(_debark.debarkRoute).toBeDefined();});});describe('`submit`',function(){it('is defined',function(){expect(_debark.submit).toBeDefined();});});describe('`fetch`',function(){it('is defined',function(){expect(_debark.fetch).toBeDefined();});});describe('`store`',function(){it('is defined',function(){expect(_debark.store).toBeDefined();});});describe('`submitRoute`',function(){it('is defined',function(){expect(_debark.submitRoute).toBeDefined();});});describe('`fetchRoute`',function(){it('is defined',function(){expect(_debark.fetchRoute).toBeDefined();});});describe('`storeRoute`',function(){it('is defined',function(){expect(_debark.storeRoute).toBeDefined();});});describe('`submitRouteFulfilled`',function(){it('is defined',function(){expect(_debark.submitRouteFulfilled).toBeDefined();});});describe('`fetchRouteFulfilled`',function(){it('is defined',function(){expect(_debark.fetchRouteFulfilled).toBeDefined();});});describe('`storeRouteFulfilled`',function(){it('is defined',function(){expect(_debark.storeRouteFulfilled).toBeDefined();});});describe('`submitRouteRejected`',function(){it('is defined',function(){expect(_debark.submitRouteRejected).toBeDefined();});});describe('`fetchRouteRejected`',function(){it('is defined',function(){expect(_debark.fetchRouteRejected).toBeDefined();});});describe('`storeRouteRejected`',function(){it('is defined',function(){expect(_debark.storeRouteRejected).toBeDefined();});});describe('`debarkRoute()`',function(){it('returns the action',function(){expect((0,_debark.debarkRoute)(MOCK_REDIRECT,MOCK_HISTORY)).toEqual({type:'MOCK ROUTE',redirect:MOCK_REDIRECT,history:MOCK_HISTORY});});});describe('`submitRoute()`',function(){it('returns the action',function(){expect((0,_debark.submitRoute)(MOCK_ROUTE,MOCK_HISTORY)).toEqual({type:'MOCK SUBMIT',debark:MOCK_ROUTE,history:MOCK_HISTORY});});});describe('`fetchRoute()`',function(){it('returns the action',function(){expect((0,_debark.fetchRoute)()).toEqual({type:'MOCK FETCH'});});});describe('`storeRoute()`',function(){it('returns the action',function(){expect((0,_debark.storeRoute)(MOCK_ROUTE,MOCK_HISTORY)).toEqual({type:'MOCK STORE',route:MOCK_ROUTE,history:MOCK_HISTORY});});});describe('`submitRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_debark.submitRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'MOCK SUBMIT_FULFILLED',response:MOCK_RESPONSE});});});describe('`fetchRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_debark.fetchRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'MOCK FETCH_FULFILLED',response:MOCK_RESPONSE});});});describe('`storeRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_debark.storeRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'MOCK STORE_FULFILLED',response:MOCK_RESPONSE});});});describe('`submitRouteRejected()`',function(){it('returns the action',function(){expect((0,_debark.submitRouteRejected)(MOCK_ERROR)).toEqual({type:'MOCK SUBMIT_REJECTED',error:MOCK_ERROR});});});describe('`fetchRouteRejected()`',function(){it('returns the action',function(){expect((0,_debark.fetchRouteRejected)(MOCK_ERROR)).toEqual({type:'MOCK FETCH_REJECTED',error:MOCK_ERROR});});});describe('`storeRouteRejected()`',function(){it('returns the action',function(){expect((0,_debark.storeRouteRejected)(MOCK_ERROR)).toEqual({type:'MOCK STORE_REJECTED',error:MOCK_ERROR});});});describe('`submit()`',function(){it('returns the `submitRoute` action',function(){expect((0,_debark.submit)(MOCK_RESPONSE,MOCK_HISTORY)).toEqual({type:'MOCK SUBMIT',debark:MOCK_RESPONSE,history:MOCK_HISTORY});});});describe('`fetch()`',function(){it('returns the `fetchRoute` action',function(){expect((0,_debark.fetch)()).toEqual({type:'MOCK FETCH'});});});describe('`store()`',function(){it('returns the `storeRoute` action',function(){expect((0,_debark.store)(MOCK_RESPONSE,MOCK_HISTORY)).toEqual({type:'MOCK STORE',route:{response:MOCK_RESPONSE},history:MOCK_HISTORY});});});});