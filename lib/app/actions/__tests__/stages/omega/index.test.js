"use strict";var _omega=require("../../../stages/omega");jest.mock('shinkansen-pantograph',function(){return{Pantograph:{OMEGA:{ROUTE:'MOCK ROUTE',CHANGE:'MOCK CHANGE',SUBMIT:'MOCK SUBMIT',FETCH:'MOCK FETCH',STORE:'MOCK STORE',QUERY:'MOCK QUERY'}}};});var MOCK_REDIRECT={};var MOCK_ROUTE={};var MOCK_HISTORY={};var MOCK_RESPONSE={};var MOCK_ERROR={};describe('@modernpoacher/zashiki-react-redux/app/actions/stages/omega',function(){describe('`ROUTE`',function(){it('is defined',function(){expect(_omega.ROUTE).toBe('MOCK ROUTE');});});describe('`CHANGE`',function(){it('is defined',function(){expect(_omega.CHANGE).toBe('MOCK CHANGE');});});describe('`SUBMIT`',function(){it('is defined',function(){expect(_omega.SUBMIT).toBe('MOCK SUBMIT');});});describe('`FETCH`',function(){it('is defined',function(){expect(_omega.FETCH).toBe('MOCK FETCH');});});describe('`STORE`',function(){it('is defined',function(){expect(_omega.STORE).toBe('MOCK STORE');});});describe('`QUERY`',function(){it('is defined',function(){expect(_omega.QUERY).toBe('MOCK QUERY');});});describe('`CHANGE_FULFILLED`',function(){it('is defined',function(){expect(_omega.CHANGE_FULFILLED).toBe('MOCK CHANGE_FULFILLED');});});describe('`SUBMIT_FULFILLED`',function(){it('is defined',function(){expect(_omega.SUBMIT_FULFILLED).toBe('MOCK SUBMIT_FULFILLED');});});describe('`FETCH_FULFILLED`',function(){it('is defined',function(){expect(_omega.FETCH_FULFILLED).toBe('MOCK FETCH_FULFILLED');});});describe('`STORE_FULFILLED`',function(){it('is defined',function(){expect(_omega.STORE_FULFILLED).toBe('MOCK STORE_FULFILLED');});});describe('`QUERY_FULFILLED`',function(){it('is defined',function(){expect(_omega.QUERY_FULFILLED).toBe('MOCK QUERY_FULFILLED');});});describe('`CHANGE_REJECTED`',function(){it('is defined',function(){expect(_omega.CHANGE_REJECTED).toBe('MOCK CHANGE_REJECTED');});});describe('`SUBMIT_REJECTED`',function(){it('is defined',function(){expect(_omega.SUBMIT_REJECTED).toBe('MOCK SUBMIT_REJECTED');});});describe('`FETCH_REJECTED`',function(){it('is defined',function(){expect(_omega.FETCH_REJECTED).toBe('MOCK FETCH_REJECTED');});});describe('`STORE_REJECTED`',function(){it('is defined',function(){expect(_omega.STORE_REJECTED).toBe('MOCK STORE_REJECTED');});});describe('`QUERY_REJECTED`',function(){it('is defined',function(){expect(_omega.QUERY_REJECTED).toBe('MOCK QUERY_REJECTED');});});describe('`omegaRoute`',function(){it('is defined',function(){expect(_omega.omegaRoute).toBeDefined();});});describe('`change`',function(){it('is defined',function(){expect(_omega.change).toBeDefined();});});describe('`submit`',function(){it('is defined',function(){expect(_omega.submit).toBeDefined();});});describe('`fetch`',function(){it('is defined',function(){expect(_omega.fetch).toBeDefined();});});describe('`store`',function(){it('is defined',function(){expect(_omega.store).toBeDefined();});});describe('`changeRoute`',function(){it('is defined',function(){expect(_omega.changeRoute).toBeDefined();});});describe('`submitRoute`',function(){it('is defined',function(){expect(_omega.submitRoute).toBeDefined();});});describe('`fetchRoute`',function(){it('is defined',function(){expect(_omega.fetchRoute).toBeDefined();});});describe('`storeRoute`',function(){it('is defined',function(){expect(_omega.storeRoute).toBeDefined();});});describe('`queryRoute`',function(){it('is defined',function(){expect(_omega.queryRoute).toBeDefined();});});describe('`changeRouteFulfilled`',function(){it('is defined',function(){expect(_omega.changeRouteFulfilled).toBeDefined();});});describe('`submitRouteFulfilled`',function(){it('is defined',function(){expect(_omega.submitRouteFulfilled).toBeDefined();});});describe('`fetchRouteFulfilled`',function(){it('is defined',function(){expect(_omega.fetchRouteFulfilled).toBeDefined();});});describe('`storeRouteFulfilled`',function(){it('is defined',function(){expect(_omega.storeRouteFulfilled).toBeDefined();});});describe('`queryRouteFulfilled`',function(){it('is defined',function(){expect(_omega.queryRouteFulfilled).toBeDefined();});});describe('`changeRouteRejected`',function(){it('is defined',function(){expect(_omega.changeRouteRejected).toBeDefined();});});describe('`submitRouteRejected`',function(){it('is defined',function(){expect(_omega.submitRouteRejected).toBeDefined();});});describe('`fetchRouteRejected`',function(){it('is defined',function(){expect(_omega.fetchRouteRejected).toBeDefined();});});describe('`storeRouteRejected`',function(){it('is defined',function(){expect(_omega.storeRouteRejected).toBeDefined();});});describe('`queryRouteRejected`',function(){it('is defined',function(){expect(_omega.queryRouteRejected).toBeDefined();});});describe('`omegaRoute()`',function(){it('returns the action',function(){expect((0,_omega.omegaRoute)(MOCK_REDIRECT,MOCK_HISTORY)).toEqual({type:'MOCK ROUTE',redirect:MOCK_REDIRECT,history:MOCK_HISTORY});});});describe('`changeRoute()`',function(){it('returns the action',function(){expect((0,_omega.changeRoute)(MOCK_ROUTE,MOCK_HISTORY)).toEqual({type:'MOCK CHANGE',route:MOCK_ROUTE,history:MOCK_HISTORY});});});describe('`submitRoute()`',function(){it('returns the action',function(){expect((0,_omega.submitRoute)(MOCK_ROUTE,MOCK_HISTORY)).toEqual({type:'MOCK SUBMIT',route:MOCK_ROUTE,history:MOCK_HISTORY});});});describe('`fetchRoute()`',function(){it('returns the action',function(){expect((0,_omega.fetchRoute)()).toEqual({type:'MOCK FETCH'});});});describe('`storeRoute()`',function(){it('returns the action',function(){expect((0,_omega.storeRoute)(MOCK_ROUTE,MOCK_HISTORY)).toEqual({type:'MOCK STORE',route:MOCK_ROUTE,history:MOCK_HISTORY});});});describe('`queryRoute()`',function(){it('returns the action',function(){expect((0,_omega.queryRoute)()).toEqual({type:'MOCK QUERY'});});});describe('`changeRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_omega.changeRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'MOCK CHANGE_FULFILLED',response:MOCK_RESPONSE});});});describe('`submitRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_omega.submitRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'MOCK SUBMIT_FULFILLED',response:MOCK_RESPONSE});});});describe('`fetchRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_omega.fetchRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'MOCK FETCH_FULFILLED',response:MOCK_RESPONSE});});});describe('`storeRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_omega.storeRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'MOCK STORE_FULFILLED',response:MOCK_RESPONSE});});});describe('`queryRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_omega.queryRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'MOCK QUERY_FULFILLED',response:MOCK_RESPONSE});});});describe('`changeRouteRejected()`',function(){it('returns the action',function(){expect((0,_omega.changeRouteRejected)(MOCK_ERROR)).toEqual({type:'MOCK CHANGE_REJECTED',error:MOCK_ERROR});});});describe('`submitRouteRejected()`',function(){it('returns the action',function(){expect((0,_omega.submitRouteRejected)(MOCK_ERROR)).toEqual({type:'MOCK SUBMIT_REJECTED',error:MOCK_ERROR});});});describe('`fetchRouteRejected()`',function(){it('returns the action',function(){expect((0,_omega.fetchRouteRejected)(MOCK_ERROR)).toEqual({type:'MOCK FETCH_REJECTED',error:MOCK_ERROR});});});describe('`storeRouteRejected()`',function(){it('returns the action',function(){expect((0,_omega.storeRouteRejected)(MOCK_ERROR)).toEqual({type:'MOCK STORE_REJECTED',error:MOCK_ERROR});});});describe('`queryRouteRejected()`',function(){it('returns the action',function(){expect((0,_omega.queryRouteRejected)(MOCK_ERROR)).toEqual({type:'MOCK QUERY_REJECTED',error:MOCK_ERROR});});});});