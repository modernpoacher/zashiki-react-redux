"use strict";var _confirm=require("../../../stages/confirm");jest.mock('shinkansen-engine/lib/components/pantograph',function(){return{CONFIRM:{ROUTE:'MOCK ROUTE',FETCH:'MOCK FETCH',STORE:'MOCK STORE',SUBMIT:'MOCK SUBMIT'}};});describe('@modernpoacher/zashiki-react-redux/app/actions/stages/confirm',function(){var MOCK_REDIRECT={};var MOCK_ROUTE={};var MOCK_HISTORY={};var MOCK_RESPONSE={statement:'MOCK STATEMENT'};var MOCK_ERROR={};describe('`ROUTE`',function(){it('is defined',function(){expect(_confirm.ROUTE).toBe('MOCK ROUTE');});});describe('`FETCH`',function(){it('is defined',function(){expect(_confirm.FETCH).toBe('MOCK FETCH');});});describe('`STORE`',function(){it('is defined',function(){expect(_confirm.STORE).toBe('MOCK STORE');});});describe('`SUBMIT`',function(){it('is defined',function(){expect(_confirm.SUBMIT).toBe('MOCK SUBMIT');});});describe('`FETCH_FULFILLED`',function(){it('is defined',function(){expect(_confirm.FETCH_FULFILLED).toBe('MOCK FETCH_FULFILLED');});});describe('`STORE_FULFILLED`',function(){it('is defined',function(){expect(_confirm.STORE_FULFILLED).toBe('MOCK STORE_FULFILLED');});});describe('`SUBMIT_FULFILLED`',function(){it('is defined',function(){expect(_confirm.SUBMIT_FULFILLED).toBe('MOCK SUBMIT_FULFILLED');});});describe('`FETCH_REJECTED`',function(){it('is defined',function(){expect(_confirm.FETCH_REJECTED).toBe('MOCK FETCH_REJECTED');});});describe('`STORE_REJECTED`',function(){it('is defined',function(){expect(_confirm.STORE_REJECTED).toBe('MOCK STORE_REJECTED');});});describe('`SUBMIT_REJECTED`',function(){it('is defined',function(){expect(_confirm.SUBMIT_REJECTED).toBe('MOCK SUBMIT_REJECTED');});});describe('`confirmRoute`',function(){it('is defined',function(){expect(_confirm.confirmRoute).toBeDefined();});});describe('`fetch`',function(){it('is defined',function(){expect(_confirm.fetch).toBeDefined();});});describe('`store`',function(){it('is defined',function(){expect(_confirm.store).toBeDefined();});});describe('`submit`',function(){it('is defined',function(){expect(_confirm.submit).toBeDefined();});});describe('`fetchRoute`',function(){it('is defined',function(){expect(_confirm.fetchRoute).toBeDefined();});});describe('`storeRoute`',function(){it('is defined',function(){expect(_confirm.storeRoute).toBeDefined();});});describe('`submitState`',function(){it('is defined',function(){expect(_confirm.submitState).toBeDefined();});});describe('`fetchRouteFulfilled`',function(){it('is defined',function(){expect(_confirm.fetchRouteFulfilled).toBeDefined();});});describe('`storeRouteFulfilled`',function(){it('is defined',function(){expect(_confirm.storeRouteFulfilled).toBeDefined();});});describe('`submitStateFulfilled`',function(){it('is defined',function(){expect(_confirm.submitStateFulfilled).toBeDefined();});});describe('`fetchRouteRejected`',function(){it('is defined',function(){expect(_confirm.fetchRouteRejected).toBeDefined();});});describe('`storeRouteRejected`',function(){it('is defined',function(){expect(_confirm.storeRouteRejected).toBeDefined();});});describe('`submitStateRejected`',function(){it('is defined',function(){expect(_confirm.submitStateRejected).toBeDefined();});});describe('`confirmRoute()`',function(){it('returns the action',function(){expect((0,_confirm.confirmRoute)(MOCK_REDIRECT,MOCK_HISTORY)).toEqual({type:'MOCK ROUTE',redirect:MOCK_REDIRECT,history:MOCK_HISTORY});});});describe('`fetchRoute()`',function(){it('returns the action',function(){expect((0,_confirm.fetchRoute)()).toEqual({type:'MOCK FETCH'});});});describe('`storeRoute()`',function(){it('returns the action',function(){expect((0,_confirm.storeRoute)(MOCK_ROUTE,MOCK_HISTORY)).toEqual({type:'MOCK STORE',route:MOCK_ROUTE,history:MOCK_HISTORY});});});describe('`submitState()`',function(){it('returns the action',function(){expect((0,_confirm.submitState)(MOCK_ROUTE,MOCK_HISTORY)).toEqual({type:'MOCK SUBMIT',confirm:MOCK_ROUTE,history:MOCK_HISTORY});});});describe('`fetchRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_confirm.fetchRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'MOCK FETCH_FULFILLED',response:MOCK_RESPONSE});});});describe('`storeRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_confirm.storeRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'MOCK STORE_FULFILLED',response:MOCK_RESPONSE});});});describe('`submitStateFulfilled()`',function(){it('returns the action',function(){expect((0,_confirm.submitStateFulfilled)(MOCK_RESPONSE)).toEqual({type:'MOCK SUBMIT_FULFILLED',response:MOCK_RESPONSE});});});describe('`fetchRouteRejected()`',function(){it('returns the action',function(){expect((0,_confirm.fetchRouteRejected)(MOCK_ERROR)).toEqual({type:'MOCK FETCH_REJECTED',error:MOCK_ERROR});});});describe('`storeRouteRejected()`',function(){it('returns the action',function(){expect((0,_confirm.storeRouteRejected)(MOCK_ERROR)).toEqual({type:'MOCK STORE_REJECTED',error:MOCK_ERROR});});});describe('`submitStateRejected()`',function(){it('returns the action',function(){expect((0,_confirm.submitStateRejected)(MOCK_ERROR)).toEqual({type:'MOCK SUBMIT_REJECTED',error:MOCK_ERROR});});});describe('`fetch()`',function(){it('returns the `fetchRoute` action',function(){expect((0,_confirm.fetch)()).toEqual({type:'MOCK FETCH'});});});describe('`store()`',function(){it('returns the `storeRoute` action',function(){expect((0,_confirm.store)(MOCK_RESPONSE,MOCK_HISTORY)).toEqual({type:'MOCK STORE',route:{response:MOCK_RESPONSE},history:MOCK_HISTORY});});});describe('`submit()`',function(){it('returns the `submitState` action',function(){expect((0,_confirm.submit)(MOCK_RESPONSE,MOCK_HISTORY)).toEqual({type:'MOCK SUBMIT',confirm:MOCK_RESPONSE,history:MOCK_HISTORY});});});});