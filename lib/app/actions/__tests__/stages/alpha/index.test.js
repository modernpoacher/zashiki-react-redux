"use strict";var _alpha=require("../../../stages/alpha");jest.mock('shinkansen-pantograph',function(){return{Pantograph:{ALPHA:{ROUTE:'MOCK ROUTE',CHANGE:'MOCK CHANGE',SUBMIT:'MOCK SUBMIT',FETCH:'MOCK FETCH',STORE:'MOCK STORE',QUERY:'MOCK QUERY'}}};});describe('@modernpoacher/zashiki-react-redux/app/actions/stages/alpha',function(){var MOCK_REDIRECT={};var MOCK_ROUTE={};var MOCK_HISTORY={};var MOCK_RESOURCE={};var MOCK_RESPONSE={};var MOCK_ERROR={};describe('`ROUTE`',function(){it('is defined',function(){expect(_alpha.ROUTE).toBe('MOCK ROUTE');});});describe('`CHANGE`',function(){it('is defined',function(){expect(_alpha.CHANGE).toBe('MOCK CHANGE');});});describe('`SUBMIT`',function(){it('is defined',function(){expect(_alpha.SUBMIT).toBe('MOCK SUBMIT');});});describe('`FETCH`',function(){it('is defined',function(){expect(_alpha.FETCH).toBe('MOCK FETCH');});});describe('`STORE`',function(){it('is defined',function(){expect(_alpha.STORE).toBe('MOCK STORE');});});describe('`QUERY`',function(){it('is defined',function(){expect(_alpha.QUERY).toBe('MOCK QUERY');});});describe('`CHANGE_FULFILLED`',function(){it('is defined',function(){expect(_alpha.CHANGE_FULFILLED).toBe('MOCK CHANGE_FULFILLED');});});describe('`SUBMIT_FULFILLED`',function(){it('is defined',function(){expect(_alpha.SUBMIT_FULFILLED).toBe('MOCK SUBMIT_FULFILLED');});});describe('`FETCH_FULFILLED`',function(){it('is defined',function(){expect(_alpha.FETCH_FULFILLED).toBe('MOCK FETCH_FULFILLED');});});describe('`STORE_FULFILLED`',function(){it('is defined',function(){expect(_alpha.STORE_FULFILLED).toBe('MOCK STORE_FULFILLED');});});describe('`QUERY_FULFILLED`',function(){it('is defined',function(){expect(_alpha.QUERY_FULFILLED).toBe('MOCK QUERY_FULFILLED');});});describe('`CHANGE_REJECTED`',function(){it('is defined',function(){expect(_alpha.CHANGE_REJECTED).toBe('MOCK CHANGE_REJECTED');});});describe('`SUBMIT_REJECTED`',function(){it('is defined',function(){expect(_alpha.SUBMIT_REJECTED).toBe('MOCK SUBMIT_REJECTED');});});describe('`FETCH_REJECTED`',function(){it('is defined',function(){expect(_alpha.FETCH_REJECTED).toBe('MOCK FETCH_REJECTED');});});describe('`STORE_REJECTED`',function(){it('is defined',function(){expect(_alpha.STORE_REJECTED).toBe('MOCK STORE_REJECTED');});});describe('`QUERY_REJECTED`',function(){it('is defined',function(){expect(_alpha.QUERY_REJECTED).toBe('MOCK QUERY_REJECTED');});});describe('`alphaRoute`',function(){it('is defined',function(){expect(_alpha.alphaRoute).toBeDefined();});});describe('`change`',function(){it('is defined',function(){expect(_alpha.change).toBeDefined();});});describe('`submit`',function(){it('is defined',function(){expect(_alpha.submit).toBeDefined();});});describe('`fetch`',function(){it('is defined',function(){expect(_alpha.fetch).toBeDefined();});});describe('`store`',function(){it('is defined',function(){expect(_alpha.store).toBeDefined();});});describe('`changeRoute`',function(){it('is defined',function(){expect(_alpha.changeRoute).toBeDefined();});});describe('`submitRoute`',function(){it('is defined',function(){expect(_alpha.submitRoute).toBeDefined();});});describe('`fetchRoute`',function(){it('is defined',function(){expect(_alpha.fetchRoute).toBeDefined();});});describe('`storeRoute`',function(){it('is defined',function(){expect(_alpha.storeRoute).toBeDefined();});});describe('`queryRoute`',function(){it('is defined',function(){expect(_alpha.queryRoute).toBeDefined();});});describe('`changeRouteFulfilled`',function(){it('is defined',function(){expect(_alpha.changeRouteFulfilled).toBeDefined();});});describe('`submitRouteFulfilled`',function(){it('is defined',function(){expect(_alpha.submitRouteFulfilled).toBeDefined();});});describe('`fetchRouteFulfilled`',function(){it('is defined',function(){expect(_alpha.fetchRouteFulfilled).toBeDefined();});});describe('`storeRouteFulfilled`',function(){it('is defined',function(){expect(_alpha.storeRouteFulfilled).toBeDefined();});});describe('`queryRouteFulfilled`',function(){it('is defined',function(){expect(_alpha.queryRouteFulfilled).toBeDefined();});});describe('`changeRouteRejected`',function(){it('is defined',function(){expect(_alpha.changeRouteRejected).toBeDefined();});});describe('`submitRouteRejected`',function(){it('is defined',function(){expect(_alpha.submitRouteRejected).toBeDefined();});});describe('`fetchRouteRejected`',function(){it('is defined',function(){expect(_alpha.fetchRouteRejected).toBeDefined();});});describe('`storeRouteRejected`',function(){it('is defined',function(){expect(_alpha.storeRouteRejected).toBeDefined();});});describe('`queryRouteRejected`',function(){it('is defined',function(){expect(_alpha.queryRouteRejected).toBeDefined();});});describe('`alphaRoute()`',function(){it('returns the action',function(){expect((0,_alpha.alphaRoute)(MOCK_REDIRECT,MOCK_HISTORY)).toEqual({type:'MOCK ROUTE',redirect:MOCK_REDIRECT,history:MOCK_HISTORY});});});describe('`changeRoute()`',function(){it('returns the action',function(){expect((0,_alpha.changeRoute)(MOCK_ROUTE,MOCK_HISTORY)).toEqual({type:'MOCK CHANGE',route:MOCK_ROUTE,history:MOCK_HISTORY});});});describe('`submitRoute()`',function(){it('returns the action',function(){expect((0,_alpha.submitRoute)(MOCK_ROUTE,MOCK_HISTORY)).toEqual({type:'MOCK SUBMIT',route:MOCK_ROUTE,history:MOCK_HISTORY});});});describe('`fetchRoute()`',function(){it('returns the action',function(){expect((0,_alpha.fetchRoute)()).toEqual({type:'MOCK FETCH'});});});describe('`storeRoute()`',function(){it('returns the action',function(){expect((0,_alpha.storeRoute)(MOCK_ROUTE,MOCK_HISTORY)).toEqual({type:'MOCK STORE',route:MOCK_ROUTE,history:MOCK_HISTORY});});});describe('`queryRoute()`',function(){it('returns the action',function(){expect((0,_alpha.queryRoute)()).toEqual({type:'MOCK QUERY'});});});describe('`changeRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_alpha.changeRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'MOCK CHANGE_FULFILLED',response:MOCK_RESPONSE});});});describe('`submitRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_alpha.submitRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'MOCK SUBMIT_FULFILLED',response:MOCK_RESPONSE});});});describe('`fetchRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_alpha.fetchRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'MOCK FETCH_FULFILLED',response:MOCK_RESPONSE});});});describe('`storeRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_alpha.storeRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'MOCK STORE_FULFILLED',response:MOCK_RESPONSE});});});describe('`queryRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_alpha.queryRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'MOCK QUERY_FULFILLED',response:MOCK_RESPONSE});});});describe('`changeRouteRejected()`',function(){it('returns the action',function(){expect((0,_alpha.changeRouteRejected)(MOCK_ERROR)).toEqual({type:'MOCK CHANGE_REJECTED',error:MOCK_ERROR});});});describe('`submitRouteRejected()`',function(){it('returns the action',function(){expect((0,_alpha.submitRouteRejected)(MOCK_ERROR)).toEqual({type:'MOCK SUBMIT_REJECTED',error:MOCK_ERROR});});});describe('`fetchRouteRejected()`',function(){it('returns the action',function(){expect((0,_alpha.fetchRouteRejected)(MOCK_ERROR)).toEqual({type:'MOCK FETCH_REJECTED',error:MOCK_ERROR});});});describe('`storeRouteRejected()`',function(){it('returns the action',function(){expect((0,_alpha.storeRouteRejected)(MOCK_ERROR)).toEqual({type:'MOCK STORE_REJECTED',error:MOCK_ERROR});});});describe('`queryRouteRejected()`',function(){it('returns the action',function(){expect((0,_alpha.queryRouteRejected)(MOCK_ERROR)).toEqual({type:'MOCK QUERY_REJECTED',error:MOCK_ERROR});});});describe('`change()`',function(){it('returns the `changeRoute` action',function(){expect((0,_alpha.change)(MOCK_RESOURCE,MOCK_HISTORY)).toEqual({type:'MOCK CHANGE',route:{resource:MOCK_RESOURCE},history:MOCK_HISTORY});});});describe('`submit()`',function(){it('returns the `submitRoute` action',function(){expect((0,_alpha.submit)(MOCK_RESOURCE,MOCK_RESPONSE,MOCK_HISTORY)).toEqual({type:'MOCK SUBMIT',route:{resource:MOCK_RESOURCE,response:MOCK_RESPONSE},history:MOCK_HISTORY});});});describe('`fetch()`',function(){it('returns the `fetchRoute` action',function(){expect((0,_alpha.fetch)()).toEqual({type:'MOCK FETCH'});});});describe('`store()`',function(){it('returns the `storeRoute` action',function(){expect((0,_alpha.store)(MOCK_RESOURCE,MOCK_RESPONSE,MOCK_HISTORY)).toEqual({type:'MOCK STORE',route:{resource:MOCK_RESOURCE,response:MOCK_RESPONSE},history:MOCK_HISTORY});});});});