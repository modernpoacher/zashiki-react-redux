"use strict";var _zashiki=require("../../zashiki");describe('@modernpoacher/zashiki-react-redux/app/actions/zashiki',function(){var MOCK_ROUTE={};var MOCK_HISTORY={};var MOCK_RESOURCE={};var MOCK_RESPONSE={};var MOCK_ERROR={};describe('`ERROR`',function(){it('is defined',function(){expect(_zashiki.ERROR).toBe('ZASHIKI_ERROR');});});describe('`CHANGE`',function(){it('is defined',function(){expect(_zashiki.CHANGE).toBe('ZASHIKI_CHANGE');});});describe('`SUBMIT`',function(){it('is defined',function(){expect(_zashiki.SUBMIT).toBe('ZASHIKI_SUBMIT');});});describe('`FETCH`',function(){it('is defined',function(){expect(_zashiki.FETCH).toBe('ZASHIKI_FETCH');});});describe('`STORE`',function(){it('is defined',function(){expect(_zashiki.STORE).toBe('ZASHIKI_STORE');});});describe('`QUERY`',function(){it('is defined',function(){expect(_zashiki.QUERY).toBe('ZASHIKI_QUERY');});});describe('`CHANGE_FULFILLED`',function(){it('is defined',function(){expect(_zashiki.CHANGE_FULFILLED).toBe('ZASHIKI_CHANGE_FULFILLED');});});describe('`SUBMIT_FULFILLED`',function(){it('is defined',function(){expect(_zashiki.SUBMIT_FULFILLED).toBe('ZASHIKI_SUBMIT_FULFILLED');});});describe('`FETCH_FULFILLED`',function(){it('is defined',function(){expect(_zashiki.FETCH_FULFILLED).toBe('ZASHIKI_FETCH_FULFILLED');});});describe('`STORE_FULFILLED`',function(){it('is defined',function(){expect(_zashiki.STORE_FULFILLED).toBe('ZASHIKI_STORE_FULFILLED');});});describe('`QUERY_FULFILLED`',function(){it('is defined',function(){expect(_zashiki.QUERY_FULFILLED).toBe('ZASHIKI_QUERY_FULFILLED');});});describe('`CHANGE_REJECTED`',function(){it('is defined',function(){expect(_zashiki.CHANGE_REJECTED).toBe('ZASHIKI_CHANGE_REJECTED');});});describe('`SUBMIT_REJECTED`',function(){it('is defined',function(){expect(_zashiki.SUBMIT_REJECTED).toBe('ZASHIKI_SUBMIT_REJECTED');});});describe('`FETCH_REJECTED`',function(){it('is defined',function(){expect(_zashiki.FETCH_REJECTED).toBe('ZASHIKI_FETCH_REJECTED');});});describe('`STORE_REJECTED`',function(){it('is defined',function(){expect(_zashiki.STORE_REJECTED).toBe('ZASHIKI_STORE_REJECTED');});});describe('`QUERY_REJECTED`',function(){it('is defined',function(){expect(_zashiki.QUERY_REJECTED).toBe('ZASHIKI_QUERY_REJECTED');});});describe('`change`',function(){it('is defined',function(){expect(_zashiki.change).toBeDefined();});});describe('`submit`',function(){it('is defined',function(){expect(_zashiki.submit).toBeDefined();});});describe('`fetch`',function(){it('is defined',function(){expect(_zashiki.fetch).toBeDefined();});});describe('`store`',function(){it('is defined',function(){expect(_zashiki.store).toBeDefined();});});describe('`changeRoute`',function(){it('is defined',function(){expect(_zashiki.changeRoute).toBeDefined();});});describe('`submitRoute`',function(){it('is defined',function(){expect(_zashiki.submitRoute).toBeDefined();});});describe('`fetchRoute`',function(){it('is defined',function(){expect(_zashiki.fetchRoute).toBeDefined();});});describe('`storeRoute`',function(){it('is defined',function(){expect(_zashiki.storeRoute).toBeDefined();});});describe('`queryRoute`',function(){it('is defined',function(){expect(_zashiki.queryRoute).toBeDefined();});});describe('`changeRouteFulfilled`',function(){it('is defined',function(){expect(_zashiki.changeRouteFulfilled).toBeDefined();});});describe('`submitRouteFulfilled`',function(){it('is defined',function(){expect(_zashiki.submitRouteFulfilled).toBeDefined();});});describe('`fetchRouteFulfilled`',function(){it('is defined',function(){expect(_zashiki.fetchRouteFulfilled).toBeDefined();});});describe('`storeRouteFulfilled`',function(){it('is defined',function(){expect(_zashiki.storeRouteFulfilled).toBeDefined();});});describe('`queryRouteFulfilled`',function(){it('is defined',function(){expect(_zashiki.queryRouteFulfilled).toBeDefined();});});describe('`changeRouteRejected`',function(){it('is defined',function(){expect(_zashiki.changeRouteRejected).toBeDefined();});});describe('`submitRouteRejected`',function(){it('is defined',function(){expect(_zashiki.submitRouteRejected).toBeDefined();});});describe('`fetchRouteRejected`',function(){it('is defined',function(){expect(_zashiki.fetchRouteRejected).toBeDefined();});});describe('`storeRouteRejected`',function(){it('is defined',function(){expect(_zashiki.storeRouteRejected).toBeDefined();});});describe('`queryRouteRejected`',function(){it('is defined',function(){expect(_zashiki.queryRouteRejected).toBeDefined();});});describe('`changeRoute()`',function(){it('returns the action',function(){expect((0,_zashiki.changeRoute)(MOCK_ROUTE,MOCK_HISTORY)).toEqual({type:'ZASHIKI_CHANGE',route:MOCK_ROUTE,history:MOCK_HISTORY});});});describe('`submitRoute()`',function(){it('returns the action',function(){expect((0,_zashiki.submitRoute)(MOCK_ROUTE,MOCK_HISTORY)).toEqual({type:'ZASHIKI_SUBMIT',route:MOCK_ROUTE,history:MOCK_HISTORY});});});describe('`fetchRoute()`',function(){it('returns the action',function(){expect((0,_zashiki.fetchRoute)()).toEqual({type:'ZASHIKI_FETCH'});});});describe('`storeRoute()`',function(){it('returns the action',function(){expect((0,_zashiki.storeRoute)(MOCK_ROUTE,MOCK_HISTORY)).toEqual({type:'ZASHIKI_STORE',route:MOCK_ROUTE,history:MOCK_HISTORY});});});describe('`queryRoute()`',function(){it('returns the action',function(){expect((0,_zashiki.queryRoute)()).toEqual({type:'ZASHIKI_QUERY'});});});describe('`changeRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_zashiki.changeRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'ZASHIKI_CHANGE_FULFILLED',response:MOCK_RESPONSE});});});describe('`submitRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_zashiki.submitRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'ZASHIKI_SUBMIT_FULFILLED',response:MOCK_RESPONSE});});});describe('`fetchRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_zashiki.fetchRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'ZASHIKI_FETCH_FULFILLED',response:MOCK_RESPONSE});});});describe('`storeRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_zashiki.storeRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'ZASHIKI_STORE_FULFILLED',response:MOCK_RESPONSE});});});describe('`queryRouteFulfilled()`',function(){it('returns the action',function(){expect((0,_zashiki.queryRouteFulfilled)(MOCK_RESPONSE)).toEqual({type:'ZASHIKI_QUERY_FULFILLED',response:MOCK_RESPONSE});});});describe('`changeRouteRejected()`',function(){it('returns the action',function(){expect((0,_zashiki.changeRouteRejected)(MOCK_ERROR)).toEqual({type:'ZASHIKI_CHANGE_REJECTED',error:MOCK_ERROR});});});describe('`submitRouteRejected()`',function(){it('returns the action',function(){expect((0,_zashiki.submitRouteRejected)(MOCK_ERROR)).toEqual({type:'ZASHIKI_SUBMIT_REJECTED',error:MOCK_ERROR});});});describe('`fetchRouteRejected()`',function(){it('returns the action',function(){expect((0,_zashiki.fetchRouteRejected)(MOCK_ERROR)).toEqual({type:'ZASHIKI_FETCH_REJECTED',error:MOCK_ERROR});});});describe('`storeRouteRejected()`',function(){it('returns the action',function(){expect((0,_zashiki.storeRouteRejected)(MOCK_ERROR)).toEqual({type:'ZASHIKI_STORE_REJECTED',error:MOCK_ERROR});});});describe('`queryRouteRejected()`',function(){it('returns the action',function(){expect((0,_zashiki.queryRouteRejected)(MOCK_ERROR)).toEqual({type:'ZASHIKI_QUERY_REJECTED',error:MOCK_ERROR});});});describe('`change()`',function(){it('returns the `changeRoute` action',function(){expect((0,_zashiki.change)(MOCK_RESOURCE,MOCK_HISTORY)).toEqual({type:'ZASHIKI_CHANGE',route:{resource:MOCK_RESOURCE},history:MOCK_HISTORY});});});describe('`submit()`',function(){it('returns the `submitRoute` action',function(){expect((0,_zashiki.submit)(MOCK_RESOURCE,MOCK_RESPONSE,MOCK_HISTORY)).toEqual({type:'ZASHIKI_SUBMIT',route:{resource:MOCK_RESOURCE,response:MOCK_RESPONSE},history:MOCK_HISTORY});});});describe('`fetch()`',function(){it('returns the `fetchRoute` action',function(){expect((0,_zashiki.fetch)()).toEqual({type:'ZASHIKI_FETCH'});});});describe('`store()`',function(){it('returns the `storeRoute` action',function(){expect((0,_zashiki.store)(MOCK_RESOURCE,MOCK_RESPONSE,MOCK_HISTORY)).toEqual({type:'ZASHIKI_STORE',route:{resource:MOCK_RESOURCE,response:MOCK_RESPONSE},history:MOCK_HISTORY});});});});