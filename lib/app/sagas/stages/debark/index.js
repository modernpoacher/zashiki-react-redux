"use strict";require("core-js/modules/es.object.get-own-property-descriptor");Object.defineProperty(exports,"__esModule",{value:true});exports.watchDebarkFetch=watchDebarkFetch;exports.watchDebarkStore=watchDebarkStore;exports.watchDebarkSubmit=watchDebarkSubmit;require("regenerator-runtime/runtime");var _effects=require("redux-saga/effects");var _boom=_interopRequireDefault(require("@hapi/boom"));var _shinkansenRails=require("shinkansen-rails");var _debark=require("../../../actions/stages/debark");var api=_interopRequireWildcard(require("../../../../api/stages/debark"));function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var _marked=regeneratorRuntime.mark(fetchRoute),_marked2=regeneratorRuntime.mark(storeRoute),_marked3=regeneratorRuntime.mark(submitRoute),_marked4=regeneratorRuntime.mark(watchDebarkFetch),_marked5=regeneratorRuntime.mark(watchDebarkStore),_marked6=regeneratorRuntime.mark(watchDebarkSubmit);function fetchRoute(route){var _ref,_ref$data,response;return regeneratorRuntime.wrap(function fetchRoute$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return(0,_effects.call)(api.fetchRoute,route);case 3:_ref=_context.sent;_ref$data=_ref.data;response=_ref$data===void 0?{}:_ref$data;_context.next=8;return(0,_effects.put)((0,_debark.fetchRouteFulfilled)(response));case 8:_context.next=14;break;case 10:_context.prev=10;_context.t0=_context["catch"](0);_context.next=14;return(0,_effects.put)((0,_debark.fetchRouteRejected)(_boom.default.badImplementation(_context.t0)));case 14:case"end":return _context.stop();}}},_marked,null,[[0,10]]);}function storeRoute(route){var _ref2,_ref2$data,response;return regeneratorRuntime.wrap(function storeRoute$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return(0,_effects.call)(api.storeRoute,route);case 3:_ref2=_context2.sent;_ref2$data=_ref2.data;response=_ref2$data===void 0?{}:_ref2$data;_context2.next=8;return(0,_effects.put)((0,_debark.storeRouteFulfilled)(response));case 8:_context2.next=14;break;case 10:_context2.prev=10;_context2.t0=_context2["catch"](0);_context2.next=14;return(0,_effects.put)((0,_debark.storeRouteRejected)(_boom.default.badImplementation(_context2.t0)));case 14:case"end":return _context2.stop();}}},_marked2,null,[[0,10]]);}function submitRoute(_ref3){var statement,_ref4,_ref4$data,response;return regeneratorRuntime.wrap(function submitRoute$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:statement=_ref3.route.statement;_context3.prev=1;_context3.next=4;return storeRoute({response:{statement:statement}});case 4:_context3.next=6;return(0,_effects.call)(api.submitRoute,{response:{debark:_shinkansenRails.Rails.rail(statement)}});case 6:_ref4=_context3.sent;_ref4$data=_ref4.data;response=_ref4$data===void 0?{}:_ref4$data;_context3.next=11;return(0,_effects.put)((0,_debark.submitRouteFulfilled)(response));case 11:_context3.next=13;return(0,_effects.put)((0,_debark.debarkRoute)(response));case 13:_context3.next=19;break;case 15:_context3.prev=15;_context3.t0=_context3["catch"](1);_context3.next=19;return(0,_effects.put)((0,_debark.submitRouteRejected)(_boom.default.badImplementation(_context3.t0)));case 19:case"end":return _context3.stop();}}},_marked3,null,[[1,15]]);}function watchDebarkFetch(){return regeneratorRuntime.wrap(function watchDebarkFetch$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return(0,_effects.takeLatest)(_debark.FETCH,fetchRoute);case 2:case"end":return _context4.stop();}}},_marked4);}function watchDebarkStore(){return regeneratorRuntime.wrap(function watchDebarkStore$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return(0,_effects.takeLatest)(_debark.STORE,storeRoute);case 2:case"end":return _context5.stop();}}},_marked5);}function watchDebarkSubmit(){return regeneratorRuntime.wrap(function watchDebarkSubmit$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return(0,_effects.takeLatest)(_debark.SUBMIT,submitRoute);case 2:case"end":return _context6.stop();}}},_marked6);}