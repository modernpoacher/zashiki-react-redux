"use strict";require("core-js/modules/es.array.iterator");require("core-js/modules/es.object.get-own-property-descriptor");require("core-js/modules/es.object.to-string");require("core-js/modules/es.string.iterator");require("core-js/modules/es.weak-map");require("core-js/modules/web.dom-collections.iterator");var _react=_interopRequireDefault(require("react"));var _enzyme=_interopRequireWildcard(require("enzyme"));var _enzymeAdapterReact=_interopRequireDefault(require("enzyme-adapter-react-16"));var _shinkansenRails=require("shinkansen-rails");var _embark=_interopRequireDefault(require("../../../../navigation/stages/embark"));function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};if(obj!=null){var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}_enzyme.default.configure({adapter:new _enzymeAdapterReact.default()});jest.mock('shinkansen-rails',function(){return{Rails:{to:jest.fn().mockImplementation(function(){return'MOCK TO';})}};});jest.mock('shinkansen-signals',function(){return{Signals:{EMBARK:'MOCK EMBARK',EMBARK_STAGE:'MOCK EMBARK STAGE',EMBARK_PATTERN:'MOCK EMBARK PATTERN'}};});jest.mock('react-router-dom');describe('@modernpoacher/zashiki-react-redux/app/components/navigation/stages/embark',function(){it('renders',function(){expect((0,_enzyme.shallow)(_react.default.createElement(_embark.default,null))).toMatchSnapshot();});it('invokes `Rails.to`',function(){expect(_shinkansenRails.Rails.to).toBeCalledWith({'MOCK EMBARK':'MOCK EMBARK STAGE'},'MOCK EMBARK PATTERN');});});