"use strict";require("core-js/modules/es.array.iterator");require("core-js/modules/es.object.get-own-property-descriptor");require("core-js/modules/es.object.to-string");require("core-js/modules/es.string.iterator");require("core-js/modules/es.weak-map");require("core-js/modules/web.dom-collections.iterator");var _react=_interopRequireDefault(require("react"));var _enzyme=_interopRequireWildcard(require("enzyme"));var _enzymeAdapterReact=_interopRequireDefault(require("enzyme-adapter-react-16"));var _immutable=_interopRequireDefault(require("immutable"));var _component=_interopRequireWildcard(require("../../zashiki/component"));function _getRequireWildcardCache(){if(typeof WeakMap!=="function")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};if(obj!=null){var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}_enzyme.default.configure({adapter:new _enzymeAdapterReact.default()});describe('@modernpoacher/zashiki-react-redux/app/components/zashiki/component',function(){var MOCK_ONCHANGE=jest.fn();var MOCK_MATCH={params:{alpha:'MOCK ALPHA',omega:'MOCK OMEGA'}};var MOCK_CHILDREN=[];beforeEach(function(){jest.clearAllMocks();});describe('Always',function(){var component=_react.default.createElement(_component.default,{onChange:MOCK_ONCHANGE,match:MOCK_MATCH,children:MOCK_CHILDREN});var spy=jest.spyOn(_component.default.prototype,'componentDidMount');var wrapper;beforeEach(function(){wrapper=(0,_enzyme.mount)(component);});it('mounts',function(){expect(wrapper).toBeDefined();});it('invokes `componentDidMount`',function(){expect(spy).toHaveBeenCalled();});it('invokes `onChange`',function(){expect(MOCK_ONCHANGE).toHaveBeenCalledWith({alpha:'MOCK ALPHA',omega:'MOCK OMEGA'});});});describe('`resource`',function(){it('is defined',function(){expect(_component.resource).toBeDefined();});});describe('`Zashiki.getDerivedStateFromProps`',function(){it('is defined',function(){expect(_component.default.getDerivedStateFromProps).toBeDefined();});});describe('`resource()`',function(){describe('`alpha` is a string',function(){expect((0,_component.resource)('MOCK ALPHA')).toEqual({alpha:'MOCK ALPHA'});});describe('`alpha` is a string and `omega` is a string',function(){expect((0,_component.resource)('MOCK ALPHA','MOCK OMEGA')).toEqual({alpha:'MOCK ALPHA',omega:'MOCK OMEGA'});});});describe('`Zashiki.getDerivedStateFromProps()`',function(){describe('props have changed',function(){var mockProps={match:MOCK_MATCH,onChange:MOCK_ONCHANGE};var mockState={now:_immutable.default.Map({alpha:'MOCK ALPHA'})};var state;beforeEach(function(){state=_component.default.getDerivedStateFromProps(mockProps,mockState);});it('returns the state',function(){expect(state).toEqual({was:_immutable.default.Map({alpha:'MOCK ALPHA'}),now:_immutable.default.Map({alpha:'MOCK ALPHA',omega:'MOCK OMEGA'})});});it('invokes `onChange`',function(){expect(MOCK_ONCHANGE).toBeCalledWith({alpha:'MOCK ALPHA',omega:'MOCK OMEGA'});});});describe('props have not changed',function(){var mockProps={match:MOCK_MATCH,onChange:MOCK_ONCHANGE};var mockState={now:_immutable.default.Map({alpha:'MOCK ALPHA',omega:'MOCK OMEGA'})};var state;beforeEach(function(){state=_component.default.getDerivedStateFromProps(mockProps,mockState);});it('returns the state',function(){expect(state).toEqual({now:_immutable.default.Map({alpha:'MOCK ALPHA',omega:'MOCK OMEGA'})});});it('does not invoke `onChange`',function(){expect(MOCK_ONCHANGE).not.toBeCalled();});});});});