// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@modernpoacher/zashiki-react-redux/app/components/stages/omega/omega renders 1`] = `
<Omega
  definition={
    {
      "elements": {
        "field": {
          "id": "MOCK ID",
        },
        "title": "MOCK TITLE",
      },
      "meta": {
        "uri": "#/",
      },
    }
  }
  description="MOCK DESCRIPTION"
  errors={[]}
  onChange={[MockFunction]}
  onSubmit={[MockFunction]}
  resource={
    {
      "alpha": "MOCK ALPHA",
      "omega": "MOCK OMEGA",
    }
  }
  response={
    {
      "#/": "MOCK VALUE",
    }
  }
>
  <form
    action="/MOCK ALPHA/MOCK OMEGA"
    method="POST"
    onSubmit={[Function]}
  >
    <ErrorSummarySprocket
      errorSummary={[]}
      onChange={[Function]}
      title="There is a problem"
    />
    <Pinion
      onChange={[Function]}
      params={
        {
          "errors": [],
        }
      }
      pinion={
        {
          "elements": {
            "field": {
              "id": "MOCK ID",
            },
            "title": "MOCK TITLE",
          },
          "meta": {
            "uri": "#/",
          },
        }
      }
    >
      <Field
        elements={
          {
            "field": {
              "id": "MOCK ID",
            },
            "title": "MOCK TITLE",
          }
        }
        meta={
          {
            "uri": "#/",
          }
        }
        onChange={[Function]}
        params={
          {
            "errors": [],
          }
        }
      >
        <TextCog
          disabled={false}
          name="MOCK ID"
          onChange={[Function]}
          readOnly={false}
          required={false}
          title="MOCK TITLE"
          value=""
        >
          <div
            className="cog text"
          >
            <TextTitle
              disabled={false}
              id="MOCK ID"
              readOnly={false}
              required={false}
              title="MOCK TITLE"
            >
              <label
                className="title text"
                htmlFor="MOCK ID"
              >
                <TextContent
                  textContent="MOCK TITLE"
                >
                  <span
                    className="text-content"
                  >
                    MOCK TITLE
                  </span>
                </TextContent>
              </label>
            </TextTitle>
            <TextDescription />
            <TextErrorMessage />
            <TextField
              disabled={false}
              id="MOCK ID"
              name="MOCK ID"
              onChange={[Function]}
              readOnly={false}
              required={false}
              value=""
            >
              <input
                className="input text"
                disabled={false}
                id="MOCK ID"
                name="MOCK ID"
                onChange={[Function]}
                readOnly={false}
                required={false}
                type="text"
                value=""
              />
            </TextField>
          </div>
        </TextCog>
      </Field>
    </Pinion>
    <button
      type="submit"
    >
      Continue
    </button>
  </form>
</Omega>
`;
